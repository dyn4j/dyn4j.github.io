id: 9204
date: 2012-12-21 04:24:11 -0500
author: c0der
parent: max-distance-constraint
avatar: http://1.gravatar.com/avatar/d7f2ee1dd5d2d313242ca7e0986d46a7?s=96&d=mm&r=g
message: "<p>Hi William,</p>\n<p>I would like to create a hinge joint, which restricts rotation about one arbitrary axis between two angles, which keeps rotating with the original owning body. In addition to applying a revolute joint constraint at a common point between the two bodies, I have the following:</p>\n<p>I have tried restricting an angle joint as follows:<br />\n1) Convert the local axis of each into world coords<br />\n2) Project the difference in angle onto the axis of rotation<br />\n3) If difference is outside the angle limits, apply the constraint</p>\n<p>	AMG3DVector4 worldAxis1 = Rot1*localAxis1;<br />\n	AMG3DVector4 worldAxis2 = Rot2*localAxis2;</p>\n<p>        AMG3DVector4 ta = m_pRigidBody1->orientation;<br />\n	AMG3DVector4 tb = m_pRigidBody2->orientation;</p>\n<p>	AMG3DVector4 currAngleDiff = ta &#8211; tb;</p>\n<p>        AMG3DScalar dtdotaxis = currAngleDiff.dot(worldAxis1);</p>\n<p>	if(dtdotaxis>=lowerLimit &amp;&amp; dtdotaxis<=upperLimit) {<br />\n		skipConstraint = true;<br />\n		return;<br />\n	}</p>\n<p>	// Compute the bias factor to prevent drift<br />\n	AMG3DVector4 C = ta &#8211; tb &#8211; worldAxis1*dtdotaxis;<br />\n	bias = k_biasFactor / dt * C;</p>\n<p>This however doesn&#039;t behave correctly and locks the joint when it reaches the angle limit. Has anyone implemented a hinge joint before? Any suggestions?</p>"