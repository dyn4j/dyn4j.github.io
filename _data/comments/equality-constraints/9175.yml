id: 9175
date: 2014-07-12 16:24:20 -0400
author: William
parent: equality-constraints
avatar: http://0.gravatar.com/avatar/9abfec71f4798ded76d242c8df48067e?s=96&d=mm&r=g
message: "<p>@Nick</p>\n<p>There are two types of constraints that you may be referring to here.  There are equality constraints, which are typically your joint formulations, and inequality constraints which include contacts (for collision resolution).  For now lets focus on equality constraints.</p>\n<p>Equality constraints can be solved using any linear solver, this is true.  For example, if you look at the <a onclick=\"javascript:pageTracker._trackPageview('/outgoing/code.google.com/p/box2d/source/browse/trunk/Box2D/Box2D/Dynamics/Joints/b2WeldJoint.cpp');\"  href=\"https://code.google.com/p/box2d/source/browse/trunk/Box2D/Box2D/Dynamics/Joints/b2WeldJoint.cpp\" title=\"Box2d Weld Joint Implementation\" target=\"_blank\" rel=\"nofollow\">b2WeldJoint</a> implementation, in the InitVelocityConstraints method, it inverts the K matrix (which I call the A matrix).  Later, in the SolveVelocityConstraints method, it multiplies the K matrix with the cdot or cdo1 (which I call the b vector).  Computing the inverse of a matrix and multiplying it by a vector is identical to solving a system of equations.</p>\n<p>This solves the joint exactly, however, there's an issue when you have more than one constraint.  Let's say you solve them one after another.  You solve the first constraint exactly, then you move to the next one and solve it exactly, and so on.  But as you are solve each subsequent constraint, the previous constraint's solutions may be invalidated.  What is required is a global solution.  This is where the iterative solver comes in.  Put simply, the iterative solver solves all joints, one after another, n number of times.  It's been shown that this will converge to the global solution.  An alternative to an iterative solver is to put all the Ax = b equations into a giant matrix and solve it, but there are a lot of advantages to the iterative method, especially for real time simulation and when coupled with inequality constraints.</p>\n<p>William</p>"