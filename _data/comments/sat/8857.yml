id: 8857
date: 2010-10-10 01:49:27 -0400
author: William
parent: sat
avatar: http://0.gravatar.com/avatar/9abfec71f4798ded76d242c8df48067e?s=96&d=mm&r=g
message: "<p>I looked at your question you posted there and the answer given is pretty much correct.</p>\n<p>However, to be safe its good to make sure you use the correct one, which depends on the winding of the polygon.  If the winding of the polygon is Counter-Clockwise then you should use the normal that points right of the edge.  If the polygon winding is clockwise, you should use the normal that points left of the edge.  (This is why many engines require a winding direction of CCW or CW)</p>\n<p><img src=\"http://www.dyn4j.org/wp-content/uploads/2015/08/polygon-winding.png\"/></p>\n<p>Referring to the really bad image above, and just using the edge (1, 1) to (2, 1.5) we get:</p>\n<pre>\nVector p1 = new Vector(1, 1);\nVector p2 = new Vector(2, 1.5);\n\nVector edge = p2 - p1;\n// edge is now (1, 0.5)\n\n// => (-y, x) = (-0.5, 1)\nVector leftHandNormal = edge.left();\n\n// => (y, -x) = (0.5, -1)\nVector RightHandNormal = edge.right();\n</pre>\n<p>If we used used the left hand normal for this edge we would get a normal that points in instead of out of the polygon.  If we reverse the winding:</p>\n<pre>\nVector p1 = new Vector(2, 1.5);\nVector p2 = new Vector(1, 1);\n\nVector edge = p2 - p1;\n// edge is now (-1, -0.5)\n\n// => (-y, x) = (0.5, -1)\nVector leftHandNormal = edge.left();\n\n// => (y, -x) = (-0.5, 1)\nVector RightHandNormal = edge.right();\n</pre>\n<p>As we can see we would want to use the left normal in this case.</p>"