id: 8894
date: 2011-12-15 13:40:28 -0500
author: William
parent: sat
avatar: http://0.gravatar.com/avatar/9abfec71f4798ded76d242c8df48067e?s=96&d=mm&r=g
message: "<p>Awesome man!  Finding the collision point and resolving the collision are difficult problems.  I have a <a href=\"http://www.dyn4j.org/2011/11/contact-points-using-clipping/\" rel=\"nofollow\">tutorial on a clipping algorithm</a> that both <a href=\"http://www.dyn4j.org\" rel=\"nofollow\">dyn4j</a> and <a onclick=\"javascript:pageTracker._trackPageview('/outgoing/www.box2d.org');\"  href=\"http://www.box2d.org\" rel=\"nofollow\">box2d</a> use to find collision points (there could be one or two depending on the configuration of the collision) that will work for any convex polygon.</p>\n<p>Unfortunately, I don't have a tutorial (yet...) for collision resolution.  The link you have is a great reference.  The problem is inherently mathematical and complex.  Today, most collision resolution software uses an impulse based solution (that's what's in the link you have).  In that reference, equation 11 is the key, solving for <em>j</em> (the impulse), which will then be applied to both bodies to resolve the collision.  You can apply the impulse to the bodies using equation 7, 8, 9 &amp; 10.</p>\n<p>This is probably one of the more simple tutorials as most attempt to deal with other issues like stacking.  If you have any questions about the article there don't hesitate to ask here.</p>"