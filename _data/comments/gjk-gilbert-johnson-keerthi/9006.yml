id: 9006
date: 2011-07-12 14:14:40 -0400
author: Federico
parent: gjk-gilbert-johnson-keerthi
avatar: http://0.gravatar.com/avatar/f379190b3252d650d7394b620d208c10?s=96&d=mm&r=g
message: "<p>Hi William.</p>\n<p>First of all, thanks! Your tutorial is so far the best I've found on the Internet. I've  just implemented a simple INTEGER version of the algorithm, according to your explanation. Some math aspects are still not so clear but I'm going to work on it. Thus, sorry in advance if I'm wrong with what I'm going to tell you. :)</p>\n<p>I have to check my code carefully to find any bug. Anyhow, I have a question. I've tested different spatial configuration of two shapes and I've seen that the code has a strange behaviour.<br />\nIn your tutorial you talk about cases in which the perpendicular line of a two vertexes simplex (AB) is 0 because of the origin laying on the AB line. I've noticed that, when one of the shape is simply translated w.r.t. the other, or else when the two shapes align on an axis, I have the same behaviour. </p>\n<p>Is that a wrong behaviour or simply the effect of using integers? Using floating point that would really be a rare case. Indeed, two floating points are hardly the same. So it's for floating coordinates.<br />\nChanging the check that relies on the direction (the one at your 11th line) from \"<=&quot; to &quot;<&quot;, everything seems to work. Obviously contact cases are seen as collisions, but that&#039;s a behaviour I would have.</p>\n<p>If the behaviour is ok, the second question is: should I use the normal of AB as new direction (as you suggest) or just use the (0,0) direction? Does this affect only velocity or also correctness of the algorithm?</p>\n<p>Again, thanks for your answer and sorry if I misinterpreted something.<br />\nCheers,<br />\nF.</p>"