id: 9028
date: 2012-06-25 12:44:18 -0400
author: William
parent: gjk-gilbert-johnson-keerthi
avatar: http://0.gravatar.com/avatar/9abfec71f4798ded76d242c8df48067e?s=96&d=mm&r=g
message: "<p>It's hard for me to tell exactly what the problem might be without examining some code.  The \"jolting\" of the penetration normal maybe correct in some cases, however the algorithm should only detect the collision if they are indeed overlapping.</p>\n<p>Just a quick question, you said one of your boxes is 80&#215;80.  You are using floating point (and not integers) for the computations right?  I'm sure you are, but I have to make sure.</p>\n<p>The \"jolting\" of the penetration normal will happen when the minimum penetration shifts from one edge of a rectangle to another.  This typically happens around the vertices.  Let's say two rectangles are overlapping normally and we get the penetration normal to be (-1.0, 0.0) (see figure A).  Then let's say that one of the rectangles moves up in one iteration (see figure B).</p>\n<p><img src=\"http://www.dyn4j.org/wp-content/uploads/2010/04/gjk_45_1.png\" alt=\"\" /></p>\n<p>The normal was (-1.0, 0.0) but is now (0.0, 1.0).  This is because (-1.0, 0.0) is no longer the vector with the minimum penetration depth.  This is a side effect of the way that collision detection as defined what the collision normal is: the vector of minimum penetration.  In practice this shouldn't be a big problem.</p>\n<p>Although it sounds like you have a different problem.  Perhaps you can give a bit more details or post (or email) some code?</p>\n<p>William</p>"