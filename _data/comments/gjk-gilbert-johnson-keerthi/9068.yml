id: 9068
date: 2013-11-06 15:14:02 -0500
author: Saad Taame
parent: gjk-gilbert-johnson-keerthi
avatar: http://1.gravatar.com/avatar/70e51748cddcc7a80615b2b910393e7e?s=96&d=mm&r=g
message: "<p>I have a first version of GJK written in C. It needs testing though. If you have tested your code and still have the test cases, I'd be interested in using them to test mine. I'm pretty sure that you can find the orientation of a vector with respect to another by just taking the determinant (some authors use the term cross product to refer to that quantity but that's an abuse as cross products are defined for 3-vectors only). You can take a look at the algorithms textbook (commonly known as CLRS); the section on computational geometry uses this computation.</p>\n<p>Here is a function that tells you whether the first vector (<em>u</em>) is to the left of the second vector (<em>v</em>):</p>\n<pre>\nbool isLeft(vector u, vector v)\n{\n  float cross = u.x*v.y - u.y*v.x;\n  return cross < 0.0;\n}\n</pre>\n<p><strong>Example 1:</strong><br />\nu = (2, 1) and v = (2, 0). u is obviously to the left of v. The cross gives -2 which is less than 0 so this test passes.</p>\n<p><strong>Example 2:</strong><br />\nu = (2, 3) and v = (-5, -1). here u is to the right of v. The cross gives 13 which is not less than 0 so this test passes as well.</p>\n<p>An extreme case is when the u and v are collinear (cross = 0). In that cases you can answer either left or right.</p>\n<p>You can test if a point is on one side of a line by taking u to be that point and v to be any vector on the line.</p>\n<p>Let me know,<br />\nsaad</p>"