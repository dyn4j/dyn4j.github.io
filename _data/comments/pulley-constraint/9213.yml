id: 9213
date: 2013-09-02 13:14:45 -0400
author: William
parent: pulley-constraint
avatar: http://0.gravatar.com/avatar/9abfec71f4798ded76d242c8df48067e?s=96&d=mm&r=g
message: "<p>Part of the confusion here is what the FrictionJoint is designed to do:</p>\n<p>The FrictionJoint in farseer, box2d, dyn4j, etc. is a constraint that drives the linear and angular velocities to zero.  Instead of supplying a friction coefficient, you supply a maximum torque and force that the joint can apply to reduce the velocities.</p>\n<p>Given that, its really just a combination of the <a href=\"http://www.dyn4j.org/2010/07/point-to-point-constraint/\" title=\"Point-to-Point Constraint\" target=\"_blank\" rel=\"nofollow\">Point-to-Point constraint</a> and the <a href=\"http://www.dyn4j.org/2010/12/angle-constraint/\" title=\"Angle Constraint\" target=\"_blank\" rel=\"nofollow\">Angle constraint</a>:</p>\n<pre>[ 1 r_skew -1 -r_skew ]\n[ 0      1  0      -1 }\n</pre>\n<p>This will compute the impulse required to fix the bodies in place (the <a href=\"http://www.dyn4j.org/2010/12/weld-constraint/\" title=\"Weld Constraint\" target=\"_blank\" rel=\"nofollow\">Weld</a> constraint).  But if we clamp the linear and angular impulse by the maximum force/torque it will give the effect of friction.</p>\n<p>In general, the friction constraint constrains all 3 degrees of freedom (for 2D), translation along the x and y and rotation about z.  In this case we can solve them separately to make things easier.  You can also reference the implementation in dyn4j <a onclick=\"javascript:pageTracker._trackPageview('/outgoing/github.com/dyn4j/dyn4j/blob/master/src/main/java/org/dyn4j/dynamics/joint/FrictionJoint.java');\"  href=\"https://github.com/dyn4j/dyn4j/blob/master/src/main/java/org/dyn4j/dynamics/joint/FrictionJoint.java\" title=\"Friction Joint - dyn4j\" target=\"_blank\" rel=\"nofollow\">here</a>.  Focus your attention on the solveVelocityConstraints method.</p>\n<p>William</p>"