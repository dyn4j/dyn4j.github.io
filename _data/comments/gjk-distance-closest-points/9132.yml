id: 9132
date: 2014-10-25 02:17:48 -0400
author: Yize
parent: gjk-distance-closest-points
avatar: http://0.gravatar.com/avatar/c987c6cf39dd75773aff3a2096187f9e?s=96&d=mm&r=g
message: "<p>Hi, William<br />\nThanks for the great tutorial.<br />\nI also read the code in GJK.java of dyn4, which confuses me in one of the terminating conditions in the distance method.</p>\n<pre>\n// get the distance to the origin\ndouble p1Mag = p1.getMagnitudeSquared();\ndouble p2Mag = p2.getMagnitudeSquared();\n\n// check if the origin lies close enough to either edge\nif (p1Mag <= Epsilon.E) {\n  // if so then we have a separation (although its\n  // nearly zero separation)\n  d.normalize();\n  separation.distance = p1.normalize();\n  separation.normal = d;\n  this.findClosestPoints(a, c, separation);\n  return true;\n} else if (p2Mag <= Epsilon.E) {\n  // if so then we have a separation (although its\n  // nearly zero separation)\n  d.normalize();\n  separation.distance = p2.normalize();\n  separation.normal = d;\n  this.findClosestPoints(c, b, separation);\n  return true;\n}\n</pre>\n<p>Why it is a separation when the origin is very close to either edge? Is there an assumption that an overlap detection run before the distance method? And I also don't  know why the normal of the separation is like that in this case, I think neither d nor p1(p2) is appropriate here.<br />\nLooking forward to your reply, Thanks!</p>"