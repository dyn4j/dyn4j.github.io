id: 10345
date: 2015-02-11 17:42:59 -0500
author: William Bittle
parent: gjk-distance-closest-points
avatar: http://0.gravatar.com/avatar/9abfec71f4798ded76d242c8df48067e?s=96&d=mm&r=g
message: "<p>@Andrew</p>\n<p>What I'm trying to convey there is that there are cases where the GJK code can fail erroneously even in normal situations.  They can all be fixed, but they aren't obvious right away.  For example, lets look at the <a href=\"http://www.dyn4j.org/2010/04/gjk-gilbert-johnson-keerthi/\" title=\"GJK (Gilbert–Johnson–Keerthi)\" rel=\"nofollow\">GJK collision post</a>, containsOrigin method's line segment case (almost the very end of the post).  Here we see that we use the Triple Product to obtain the normal vector of the line segment in the direction of the origin.  This will yield a zero vector for the new search direction if the origin lies <strong>on</strong> the line segment.  This can cause the algorithm to exit early.  There are situations like this in the Closest Points and EPA code as well.</p>\n<p>In this post I'm assuming that the Closest Points algorithm would create its own simplex.  I suppose you could use the simplex from a failed GJK collision detection test, but you'll need to complete it if the GJK collision detection test failed before it has the requisite point count (not a big deal, just a thought).  I need to add some more code here to explain a little further, since, for example, it's not really clear what the FindClosestEdge method does.  I'll try to get something added to clear things up.</p>\n<p>William</p>"